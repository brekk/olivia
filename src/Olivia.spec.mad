import { assertEquals, test } from "Test"

import { WBoolean, WInteger, WString, Wrapped, makeInspector } from "@/Clouseau"



alias CoolRecord = { age :: Integer, check :: Boolean, name :: String, value :: {} -> Boolean }

instance Introspect CoolRecord {
  introspect = () => [
    #[
      "age",
      pipe(
        .age,
        WInteger,
      ),
    ],
    #[
      "check",
      pipe(
        .check,
        WBoolean,
      ),
    ],
    #[
      "name",
      pipe(
        .name,
        WString,
      ),
    ],
  ]
}

INSPECTABLE_VALUE_A = { age: 36, check: true, name: "Peter Sellers", value: () => true }
test(
  "introspect",
  () => do {
    i = introspect(INSPECTABLE_VALUE_A)
    matched = i(INSPECTABLE_VALUE_A)
    return assertEquals(matched, [])
  },
)

test(
  "makeInspector",
  () => do {
    inspector = makeInspector(INSPECTABLE_VALUE_A)
    inspection = inspector(INSPECTABLE_VALUE_A)
    return assertEquals(inspection, {{}})
  },
)
